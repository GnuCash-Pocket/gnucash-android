name: CI Build

on:
  push: {}
  pull_request:
    branches: [master]

env:
  RUN_QUALIFIER: ${{github.run_number}}-${{github.run_attempt}}
  # todo: Replace following envs with vars see https://github.com/community/community/discussions/44322
  GCLOUD_BUCKET: test-lab-9c68imc4w11aa-i4k7hbj489wyu
  GCLOUD_SERVICE_ACCOUNT: test-restults-fetcher@gnucash-pocket.iam.gserviceaccount.com
  GCLOUD_WORKLOAD_IDENTITY_PROVIDER: projects/679335683580/locations/global/workloadIdentityPools/github-main-testing-pool/providers/github
  GOOGLE_SERVICES: |
    {
      "project_info": {
        "project_number": "679335683580",
        "project_id": "gnucash-pocket",
        "storage_bucket": "gnucash-pocket.appspot.com"
      },
      "client": [
        {
          "client_info": {
            "mobilesdk_app_id": "1:679335683580:android:4a7289ff6df3b6d0e7fe79",
            "android_client_info": {
              "package_name": "org.gnucash.android"
            }
          },
          "oauth_client": [
            {
              "client_id": "679335683580-9k138m2htltj52u018gqetisuf6fj3ca.apps.googleusercontent.com",
              "client_type": 3
            }
          ],
          "api_key": [
            {
              "current_key": "AIzaSyD3DWSMPA3bE2fm6vChbGy6o_fNYRLCCsQ"
            }
          ],
          "services": {
            "appinvite_service": {
              "other_platform_oauth_client": [
                {
                  "client_id": "679335683580-9k138m2htltj52u018gqetisuf6fj3ca.apps.googleusercontent.com",
                  "client_type": 3
                }
              ]
            }
          }
        },
        {
          "client_info": {
            "mobilesdk_app_id": "1:679335683580:android:b7412dd4e5dddc59e7fe79",
            "android_client_info": {
              "package_name": "org.gnucash.android.devel"
            }
          },
          "oauth_client": [
            {
              "client_id": "679335683580-9k138m2htltj52u018gqetisuf6fj3ca.apps.googleusercontent.com",
              "client_type": 3
            }
          ],
          "api_key": [
            {
              "current_key": "AIzaSyD3DWSMPA3bE2fm6vChbGy6o_fNYRLCCsQ"
            }
          ],
          "services": {
            "appinvite_service": {
              "other_platform_oauth_client": [
                {
                  "client_id": "679335683580-9k138m2htltj52u018gqetisuf6fj3ca.apps.googleusercontent.com",
                  "client_type": 3
                }
              ]
            }
          }
        }
      ],
      "configuration_version": "1"
    }

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2
      - name: Prepare Google Services
        run: echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ env.GOOGLE_SERVICES }}
      - name: Build Application APK
        run: ./gradlew assembleDevelopmentDebug
      - name: Rename Application APK
        run: cp app/build/outputs/apk/development/debug/*.apk application-$RUN_QUALIFIER.apk
      - name: Upload Application APK
        uses: actions/upload-artifact@v3
        with:
          name: application-apk
          path: application-${{env.RUN_QUALIFIER}}.apk
          if-no-files-found: error

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2
      - name: Prepare Google Services
        run: echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ env.GOOGLE_SERVICES }}
      - name: Run Unit Tests
        run: ./gradlew testDevelopmentDebugUnitTest
      - name: Unit Test Summary
        uses: test-summary/action@v2
        if: always()
        with:
          paths: app/build/test-results/testDevelopmentDebugUnitTest/TEST-*.xml
      - name: Upload Unit Test Results for Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: unit-test-results
          path: app/build/test-results/testDevelopmentDebugUnitTest/TEST-*.xml
          if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2
      - name: Prepare Google Services
        run: echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ env.GOOGLE_SERVICES }}
      - name: Run Linter
        run: ./gradlew lintDevelopmentDebug

  instrumentation-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2
      - name: Prepare Google Services
        run: echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ env.GOOGLE_SERVICES }}
      - name: Build Instrumentation APK
        run: ./gradlew assembleDevelopmentDebugAndroidTest
      - name: Rename Instrumentation APK
        run: cp app/build/outputs/apk/androidTest/development/debug/*.apk instrumentation-$RUN_QUALIFIER.apk
      - name: Upload Instrumentation APK
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation-apk
          path: instrumentation-${{env.RUN_QUALIFIER}}.apk
          if-no-files-found: error

  instrumentation-test:
    runs-on: ubuntu-latest
    needs: [build, instrumentation-build]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download Application APK
        uses: actions/download-artifact@v3
        with:
          name: application-apk
      - name: Download Instrumentation APK
        uses: actions/download-artifact@v3
        with:
          name: instrumentation-apk
      - name: Login to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCLOUD_SERVICE_ACCOUNT }}
      - name: Set up GCloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Run Instrumentation Tests
        id: run-instrumentation-test
        run: . ./instrumentation-test.sh
        env:
          APPLICATION_APK: application-${{env.RUN_QUALIFIER}}.apk
          INSTRUMENTATION_APK: instrumentation-${{env.RUN_QUALIFIER}}.apk
          GCLOUD_BUCKET: ${{ env.GCLOUD_BUCKET }}
          GCLOUD_BUCKET_DIRECTORY: ${{env.RUN_QUALIFIER}}
      - name: Fetch Instrumentation Test Results
        run: |
          mkdir instrumentation-test-results \
          && gcloud storage cp -r ${{ env.RESULTS_URL }} instrumentation-test-results \
          && ls instrumentation-test-results
        env:
          RESULTS_URL: gs://${{env.GCLOUD_BUCKET}}/${{env.RUN_QUALIFIER}}/**/test_result_*.xml
      - name: Instrumentation Test Summary
        uses: test-summary/action@v2
        with:
          paths: instrumentation-test-results/test_result_*.xml
      - name: Upload Instrumentation Test Results for Report
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation-test-results
          path: instrumentation-test-results/test_result_*.xml
          if-no-files-found: error
      - name: Assert Instrumentation Tests Success
        run: if [ "$SUCCESS" != "true" ]; then exit 1; fi
        env:
          SUCCESS: ${{steps.run-instrumentation-test.outputs.test_success}}
